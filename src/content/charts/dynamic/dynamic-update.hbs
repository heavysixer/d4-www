---
title: Column chart
concepts:
  - Dynamic data
---
<h5>{{title}}</h5>
<p>
  The following example demonstrates how you might dynamically update a chart
  when the underlying data object changes.
</p>
<hr/>
<script type="text/javascript" charset="utf-8" id='source_code'>
'use strict';

$(document).ready(function(){

  // This sample code more or less recreates this native d3 example:
  // http://mbostock.github.io/d3/tutorial/bar-2.html
  var t = 1297110663;
  var v = 70;
  var next = function() {
    return {
      x: ++t,
      y: v = ~~Math.max(10, Math.min(90, v + 10 * (Math.random() - 0.5)))
    };
  };
  var data = d3.range(20).map(next);

  var chart = d4.charts.column();
  chart
  .outerWidth($('#example').width())
  .mixout('yAxis')
  .y(function(axis){
    axis
    .domain([0,100])
    .rangeRound([0, chart.height()]);
  })
  .x(function(axis){
    axis
    .scale('linear')
    .domain([0, data.length])
    .range([0, chart.width() * 0.75]);
  })
  .using('barLabels', function(labels){
    labels
    .x(function(d, i, n) {

      /*
      Mike Bostock's example uses `i` as the value to increment the offset with.
      However, in d4 the stackedColumnSeries feature assumes you are dealing with
      multiple series. For this reason `i` will always return zero because we only
      have one series. In order to get a value which we can increment off of we
      must use the `n` variable.
      */
      return this.x(n) +
      (Math.floor((chart.width() / data.length) * 0.60))/2;
    });
  })
  .using('bars', function(bars){
    bars
    .x(function(d, i, n) {

      /*
      We floor the value and subtract 0.5 to ensure the rect's border is
      crisp and not anti-aliased. This is done to match Mike's original
      demo.
      */
      return Math.floor(this.x(n)) - 0.5;
    })
    .y(function(d){
      return this.y(d[this.y.$key]) - 0.5;
    })
    .width(Math.floor((chart.width() / data.length) * 0.60));
  });

  setInterval(function() {
    data.shift();
    data.push(next());
    redraw();
  }, 1500);

  var redraw = function(){
    d3.select('#example')
    .datum(data)
    .call(chart);
  };
  redraw();

});

</script>
<div id="dynamic_updates">
  <div id="example"></div>
</div>
<h6>JavaScript Code</h6>
<pre><code id="code" class="language-javascript"></code></pre>
{{> disqus }}
